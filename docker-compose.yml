version: "3.8"
services:
  gateway:
    build: ./api-gateway
    restart: always
    hostname: gateway
    ports:
      - "3000:3000"
    networks:
      - backend
    links:
      - file
      - user
      - work-space
    depends_on:
      - file
      - user
      - work-space
    command: sh -c "dockerize -wait tcp://user:3001 -wait tcp://work-space:3002 -wait tcp://file:3003 -timeout 30s yarn start:dev"

  file:
    build: ./file-service
    restart: always
    hostname: file
    networks:
      - backend
    links:
      - db
    depends_on:
      - db

  user:
    build: ./user-service
    restart: always
    hostname: user
    networks:
      - backend
    links:
      - db
    depends_on:
      - db

  work-space:
    build: ./work-space-service
    restart: always
    hostname: work-space
    volumes:
      - ./work-space-service/src:/var/www/work-space/src
    networks:
      - backend
    links:
      - db
    depends_on:
      - db

  auth:
    build: ./auth-service
    restart: always
    hostname: auth
    networks:
      - backend
    links:
      - db
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - ./db/init/create-table.sql:/docker-entrypoint-initdb.d/create-table.sql
      - ./db/data:/var/lib/postgresql/data
    networks:
      - backend

networks:
  backend:
    driver: bridge
